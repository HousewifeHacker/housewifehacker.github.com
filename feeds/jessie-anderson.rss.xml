<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>housewife_hacker - Jessie Anderson</title><link>http://housewifehacker.com/</link><description></description><lastBuildDate>Tue, 10 Sep 2019 00:00:00 -0300</lastBuildDate><item><title>Authentication Browser Storage Options</title><link>http://housewifehacker.com/authentication-browser-storage-options.html</link><description>&lt;p&gt;Before the invention of client side rendering and AJAX, there were web apps that required visiting multiple pages. To keep the auth data in the browser for navigating to other pages, cookies were invented. Even with single page apps, browser storage is important to allow a user to remain authenticated …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Tue, 10 Sep 2019 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2019-09-10:/authentication-browser-storage-options.html</guid></item><item><title>Authentication Cases You Could Handle</title><link>http://housewifehacker.com/authentication-cases-you-could-handle.html</link><description>&lt;p&gt;Authentication is a big job at the start of building a web application. These days, there are a lot of options on how to do it. The technical implementation and possibly 3rd party service you choose can depend on what use cases you want to support. This is the start …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Sun, 08 Sep 2019 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2019-09-08:/authentication-cases-you-could-handle.html</guid></item><item><title>Github Search Users</title><link>http://housewifehacker.com/github-search-users.html</link><description>&lt;ul class="simple"&gt;
&lt;li&gt;Search for Github users and view some profile details, utilizing Github's GraphQL API&lt;/li&gt;
&lt;li&gt;Serverless React app&lt;/li&gt;
&lt;li&gt;Styled with Material-UI&lt;/li&gt;
&lt;li&gt;'Concurrent Mode' with debounce to reduce fetching and rendering with React hooks&lt;/li&gt;
&lt;li&gt;Technologies: React, Axios, Material-UI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.github.com/housewifehacker/GithubUserSearch/"&gt;Github&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Wed, 14 Aug 2019 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2019-08-14:/github-search-users.html</guid></item><item><title>Confirm Destruction Modal</title><link>http://housewifehacker.com/confirm-destruction-modal.html</link><description>&lt;p&gt;Confirmation modal for users to reduce accidental destruction. Uses React, Reactstrap, and Font Awesome.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://codepen.io/HousewifeHacker/pen/EBQLyW"&gt;CodePen&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Sat, 22 Jun 2019 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2019-06-22:/confirm-destruction-modal.html</guid></item><item><title>Sprite Viewer</title><link>http://housewifehacker.com/sprite-viewer.html</link><description>&lt;p&gt;Given an image composed of sprites evenly spaced with the same dimensions, slide through viewing individual sprites. Uses ES6, HTML5 Canvas, and JQuery-UI Slider.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://codepen.io/HousewifeHacker/pen/jbNqXz/"&gt;CodePen&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Mon, 31 Aug 2015 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2015-08-31:/sprite-viewer.html</guid></item><item><title>FlightBookr</title><link>http://housewifehacker.com/flightbookr.html</link><description>&lt;ul class="simple"&gt;
&lt;li&gt;Flask backend provides API to Backbone.js from a JSON file of flight information&lt;/li&gt;
&lt;li&gt;Client-side form validations with Parsley.js&lt;/li&gt;
&lt;li&gt;Marionette managed composite views and events&lt;/li&gt;
&lt;li&gt;Technologies: Flask, Flask-Assets, Backbone.js, Marionette, Foundation, Parsely, Syphon, Momentjs, JST templates, Jinja2, HTML, CSS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://flightbookr.herokuapp.com/"&gt;Live&lt;/a&gt;
&lt;a class="reference external" href="http://www.github.com/housewifehacker/flightbookr/"&gt;Github&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Sun, 26 Oct 2014 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2014-10-26:/flightbookr.html</guid></item><item><title>Python's Dictionary Get</title><link>http://housewifehacker.com/pythons-dictionary-get.html</link><description>&lt;p&gt;In a Python dictionary, one way to return the value for a specific key is a_dictionary[key]. Another way is to use the get method: a_dictionary.get(key). The difference is when the key is not in the dictionary. The bracket method returns an error, but the get method is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Thu, 16 Oct 2014 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2014-10-16:/pythons-dictionary-get.html</guid></item><item><title>Asteroids</title><link>http://housewifehacker.com/asteroids.html</link><description>&lt;p&gt;Client-side JavaScript game drawn on an HTML5 Canvas&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://housewifehacker.com/asteroids/"&gt;Live&lt;/a&gt;
&lt;a class="reference external" href="http://www.github.com/housewifehacker/asteroids/"&gt;Github&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Mon, 13 Oct 2014 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2014-10-13:/asteroids.html</guid></item><item><title>Bcrypt with Rails</title><link>http://housewifehacker.com/bcrypt-with-rails.html</link><description>&lt;p&gt;Bcrypt is an algorithm for hashing passwords that can be implemented in many programming languages. When a user signs up or logs in, the password they entered is sent to the server. SSL should be used for this stage, but that is separate from bcrypt. Bcrypt's job is to protect …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Mon, 13 Oct 2014 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2014-10-13:/bcrypt-with-rails.html</guid></item><item><title>PollTheWorld</title><link>http://housewifehacker.com/polltheworld.html</link><description>&lt;ul class="simple"&gt;
&lt;li&gt;Create polls, vote, and view responses summary.&lt;/li&gt;
&lt;li&gt;Heroku hosted Backbone.js application consuming RESTful Rails API&lt;/li&gt;
&lt;li&gt;Custom user authentication system with hashed passwords, session token and guest login&lt;/li&gt;
&lt;li&gt;Infinite scroll appends next page's Backbone collection on scroll off event&lt;/li&gt;
&lt;li&gt;Extends Backbone's model parsing to include relations&lt;/li&gt;
&lt;li&gt;Custom Backbone composite view …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Sun, 12 Oct 2014 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2014-10-12:/polltheworld.html</guid></item><item><title>The Practice of Programming</title><link>http://housewifehacker.com/the-practice-of-programming.html</link><description>&lt;p&gt;Disclaimer: This book does not have any python examples. But even before I began dabbling in C, I believe this book made me a better programmer. I recommend this book for the intermediate programmer who knows how to code, but may not be very good at coding with others. Someone …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Sun, 10 Jun 2012 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2012-06-10:/the-practice-of-programming.html</guid></item><item><title>Intermediate Guess Number Python Game</title><link>http://housewifehacker.com/intermediate-guess-number-python-game.html</link><description>&lt;p&gt;In my first month of learning python, I wrote a simple guess the number game. It did not include exception handling, was not pep8 compliant, and was organized somewhat poorly. It also needed updating because it used what I like to call &amp;quot;C Print Formatting,&amp;quot; which used to be correct …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Sat, 02 Jun 2012 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2012-06-02:/intermediate-guess-number-python-game.html</guid><category>python</category><category>intermediate</category><category>games</category><category>string formatting</category><category>exception handling</category><category>debugging</category></item><item><title>Easy Anagram Dictionaries Practice</title><link>http://housewifehacker.com/easy-anagram-dictionaries-practice.html</link><description>&lt;p&gt;I do not use dictionaries very often. Friday, I was without internet all day, so I took the opportunity to play with dir() and help() to discover some dictionary properties. My short-lived obsession with Draw Something on the iPhone has gotten me interested in anagrams (kicked the habit by reading …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Tue, 15 May 2012 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2012-05-15:/easy-anagram-dictionaries-practice.html</guid><category>python</category><category>dictionary</category><category>data structures</category><category>mutable and immutable</category><category>beginner</category></item><item><title>Mutable versus Immutable Object Types</title><link>http://housewifehacker.com/mutable-versus-immutable-object-types.html</link><description>&lt;p&gt;Strings, lists, tuples, integers, float, dictionaries, and sets are all types of python objects with different properties and uses. When using an object in a program or in your terminal, your session assigns an Id to access the computer's memory. The Id will be unique each session and on each …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Mon, 07 May 2012 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2012-05-07:/mutable-versus-immutable-object-types.html</guid><category>python</category><category>lists</category><category>data structures</category><category>mutable and immutable</category></item><item><title>Structure and Interpretation of Computer Programs</title><link>http://housewifehacker.com/structure-and-interpretation-of-computer-programs.html</link><description>&lt;p&gt;Probably the most popular, I mean cult inspiring, computer programming book of all time. This book created a movement circa the year 2000. All the major universities that prided themselves on producing technical talent adopted this textbook into their curriculum. It began as a Scheme and Intro to Programming course …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2012-03-10:/structure-and-interpretation-of-computer-programs.html</guid></item><item><title>2010 Guess The Number Game</title><link>http://housewifehacker.com/2010-guess-the-number-game.html</link><description>&lt;p&gt;During my first month of learning python, I wrote a game to guess a number between 1 and 20 with six attempts. This simple game is good practice for a beginner. A better written and more advanced version can be found at &lt;a class="reference external" href="http://housewifehacker.com/intermediate-guess-number-python-game.html"&gt;http://housewifehacker.com/intermediate-guess-number-python-game.html&lt;/a&gt;. This example is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Mon, 25 Oct 2010 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2010-10-25:/2010-guess-the-number-game.html</guid><category>python</category><category>games</category><category>string formatting</category><category>beginner</category></item><item><title>Decimal to Change Number Precision</title><link>http://housewifehacker.com/decimal-to-change-number-precision.html</link><description>&lt;p&gt;The built in math functions in Python use binary approximations, giving some funky results when dealing with numbers containing decimals:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mf"&gt;0.30000000000000004&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;100.00&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;3.000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;33.333300000000001&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One way to appropriately find the sum of decimals is to use strings&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;0.3 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Fri, 22 Oct 2010 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2010-10-22:/decimal-to-change-number-precision.html</guid><category>python</category><category>modules</category><category>math</category></item><item><title>Map Function in Python</title><link>http://housewifehacker.com/map-function-in-python.html</link><description>&lt;p&gt;Today I discovered the map function in Python. Map causes some simple for loops to be verbose and unnecessary. Let's look at how to change a list of integers to a list of strings. First we'll use a for loop:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Wed, 20 Oct 2010 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2010-10-20:/map-function-in-python.html</guid><category>python</category><category>modules</category></item><item><title>Indexes, Strings, and Lists</title><link>http://housewifehacker.com/indexes-strings-and-lists.html</link><description>&lt;p&gt;A Python string's properties can be best understood by using sentences and words, although numbers can also be stored as strings. Be careful not to name a string as 'str' or 'string', because these are built in functions in Python. Let's play with some basic functions you can do to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Mon, 18 Oct 2010 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2010-10-18:/indexes-strings-and-lists.html</guid><category>python</category><category>beginner</category><category>data structures</category><category>lists</category><category>strings</category></item><item><title>Math With Python</title><link>http://housewifehacker.com/math-with-python.html</link><description>&lt;p&gt;If this is your first time using Python in Windows, you will have to download it from python.org. Every operating system includes a terminal, which we will be using to practice and test. Google &amp;quot;How to open terminal&amp;quot; and your operating system name to find specific information about opening …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessie Anderson</dc:creator><pubDate>Mon, 18 Oct 2010 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:housewifehacker.com,2010-10-18:/math-with-python.html</guid><category>python</category><category>beginner</category><category>math</category><category>modules</category></item></channel></rss>